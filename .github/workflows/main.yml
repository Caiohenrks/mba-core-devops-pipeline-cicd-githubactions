name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

  setup-docker-buildx:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Switch Buildx Driver to `docker-container`
        run: |
          docker buildx create --name mybuilder --use
          docker buildx inspect --bootstrap

  install-dependencies:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.0.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

  build-image:
    runs-on: ubuntu-latest
    needs: [setup-docker-buildx, install-dependencies]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Docker Image with Buildx
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            -t qrcode-api:latest \
            -f ./data_app/Dockerfile ./data_app \
            --push

  push-docker-hub:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Push to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag qrcode-api $DOCKER_USERNAME/qrcode-api:latest
          docker push $DOCKER_USERNAME/qrcode-api:latest
          docker tag qrcode-api $DOCKER_USERNAME/qrcode-api:V${{ github.run_number }}
          docker push $DOCKER_USERNAME/qrcode-api:V${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: push-docker-hub
    steps:
      - name: Deploy Application
        run: |
          docker-compose -f ./data_app/docker-compose.yml up -d

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Smoke Test
        run: |
          docker run --rm -v ./postman:/etc/newman -t postman/newman run /etc/newman/qrcode-api.json -r cli

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: smoke-test
    steps:
      - name: Upload Artifacts
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          zip -r qrcode-api_${{ github.run_number }}.zip artifacts
          curl -v -u $NEXUS_USERNAME:$NEXUS_PASSWORD --upload-file qrcode-api_${{ github.run_number }}.zip http://192.168.50.30:8081/repository/jenkins_artifacts/qrcode-api_${{ github.run_number }}.zip
